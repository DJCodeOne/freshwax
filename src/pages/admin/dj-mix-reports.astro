---
// src/pages/admin/dj-mix-reports.astro
import Layout from '../../layouts/Layout.astro';
---

<Layout title="DJ Mix Reports - Fresh Wax Admin">
	<div style="max-width: 1400px; margin: 0 auto; padding: 20px; background: #ffffff;">
		<!-- Logo Header -->
		<div style="background: #ffffff; padding: 30px 20px; margin-bottom: 30px; display: flex; justify-content: center; align-items: center; border: 3px solid #000;">
			<img 
				src="/logo.webp" 
				alt="Fresh Wax" 
				style="height: 80px; width: auto; max-width: 90%; display: block;"
				onerror="this.style.display='none'"
			>
		</div>

		<!-- Main Header -->
		<div style="background: #fff; padding: 30px; margin-bottom: 30px; border: 3px solid #000; position: relative;">
			<div style="position: absolute; top: 0; left: 0; right: 0; height: 5px; background: #000;"></div>
			<button 
				id="logoutBtn"
				style="position: absolute; top: 20px; right: 20px; padding: 10px 20px; background: #000; color: #ffffff; border: 3px solid #000; font-weight: 700; cursor: pointer; font-size: 14px; text-transform: uppercase; letter-spacing: 0.5px;"
			>
				🚪 Logout
			</button>
			<h1 style="font-size: 32px; color: #000; margin-bottom: 10px; font-weight: 900; letter-spacing: -0.5px;">🚨 DJ Mix Reports</h1>
			<p style="color: #666; font-size: 16px;">Review and manage reported mixes from the community</p>
		</div>

		<a 
			href="/admin" 
			style="display: inline-block; padding: 10px 20px; background: #000; color: #ffffff; border: 3px solid #000; font-weight: 700; text-decoration: none; margin-bottom: 20px; text-transform: uppercase; letter-spacing: 0.5px; font-size: 14px;"
		>
			← Back to Dashboard
		</a>

		<!-- Stats Row -->
		<div 
			id="statsRow" 
			style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-bottom: 30px;"
		>
			<div style="background: #ffe0e0; border: 3px solid #ff0000; padding: 20px; text-align: center;">
				<div id="pendingCount" style="font-size: 48px; font-weight: 900; color: #000; margin-bottom: 5px;">0</div>
				<div style="font-size: 12px; font-weight: 700; color: #666; text-transform: uppercase; letter-spacing: 1px;">Pending Reports</div>
			</div>
			<div style="background: #fff; border: 3px solid #000; padding: 20px; text-align: center;">
				<div id="reviewedCount" style="font-size: 48px; font-weight: 900; color: #000; margin-bottom: 5px;">0</div>
				<div style="font-size: 12px; font-weight: 700; color: #666; text-transform: uppercase; letter-spacing: 1px;">Reviewed</div>
			</div>
			<div style="background: #fff; border: 3px solid #000; padding: 20px; text-align: center;">
				<div id="totalCount" style="font-size: 48px; font-weight: 900; color: #000; margin-bottom: 5px;">0</div>
				<div style="font-size: 12px; font-weight: 700; color: #666; text-transform: uppercase; letter-spacing: 1px;">Total Reports</div>
			</div>
		</div>

		<!-- Reports Container -->
		<div style="background: #fff; border: 3px solid #000; padding: 30px; margin-bottom: 30px;">
			<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px; padding-bottom: 20px; border-bottom: 3px solid #000; flex-wrap: wrap; gap: 20px;">
				<h2 style="font-size: 28px; font-weight: 900; color: #000; text-transform: uppercase; letter-spacing: 1px;">📋 Reports</h2>
				<div style="display: flex; gap: 10px; flex-wrap: wrap;">
					<button 
						class="filter-btn active" 
						data-filter="pending" 
						id="filterPending"
						style="padding: 10px 20px; border: 3px solid #000; background: #000; color: #ffffff; font-weight: 700; cursor: pointer; text-transform: uppercase; letter-spacing: 0.5px; font-size: 14px;"
					>
						Pending <span style="display: inline-block; background: #ff0000; color: #ffffff; padding: 2px 8px; border-radius: 10px; font-size: 12px; margin-left: 5px; font-weight: 900;" id="pendingBadge">0</span>
					</button>
					<button 
						class="filter-btn" 
						data-filter="reviewed" 
						id="filterReviewed"
						style="padding: 10px 20px; border: 3px solid #000; background: #ffffff; color: #000; font-weight: 700; cursor: pointer; text-transform: uppercase; letter-spacing: 0.5px; font-size: 14px;"
					>
						Reviewed
					</button>
					<button 
						class="filter-btn" 
						data-filter="all" 
						id="filterAll"
						style="padding: 10px 20px; border: 3px solid #000; background: #ffffff; color: #000; font-weight: 700; cursor: pointer; text-transform: uppercase; letter-spacing: 0.5px; font-size: 14px;"
					>
						All
					</button>
				</div>
			</div>

			<div id="reportsContainer">
				<div style="text-align: center; padding: 60px 20px; color: #000; font-size: 16px; font-weight: 700;">Loading reports...</div>
			</div>
		</div>
	</div>

	<style>
		body {
			background: #ffffff;
		}

		.filter-btn:hover:not(.active) {
			transform: translate(-2px, -2px);
			box-shadow: 4px 4px 0 #000;
		}

		.filter-btn.active {
			background: #000 !important;
			color: #ffffff !important;
		}

		#logoutBtn:hover {
			background: #ffffff;
			color: #000;
			transform: translate(-4px, -4px);
			box-shadow: 8px 8px 0 #000;
		}
	</style>

	<script type="module">
		import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js';
		import { getAuth, onAuthStateChanged, signOut } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js';
		import { getFirestore, collection, query, where, getDocs, updateDoc, doc, deleteDoc, orderBy } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js';

		const firebaseConfig = {
			apiKey: "AIzaSyBiZGsWdvA9ESm3OsUpZ-VQpwqMjMpBY6g",
			authDomain: "freshwax-store.firebaseapp.com",
			projectId: "freshwax-store",
			storageBucket: "freshwax-store.firebasestorage.app",
			messagingSenderId: "675435782973",
			appId: "1:675435782973:web:e8459c2ec4a5f6d683db54"
		};

		const app = initializeApp(firebaseConfig);
		const auth = getAuth(app);
		const db = getFirestore(app);

		let currentFilter = 'pending';
		let allReports = [];

		// Auth check
		onAuthStateChanged(auth, (user) => {
			if (user) {
				loadReports();
			} else {
				window.location.href = '/login';
			}
		});

		// Logout
		document.getElementById('logoutBtn').addEventListener('click', async () => {
			await signOut(auth);
			window.location.href = '/login';
		});

		// Filter buttons
		document.querySelectorAll('.filter-btn').forEach(btn => {
			btn.addEventListener('click', () => {
				document.querySelectorAll('.filter-btn').forEach(b => {
					b.classList.remove('active');
					b.style.background = '#ffffff';
					b.style.color = '#000';
				});
				btn.classList.add('active');
				btn.style.background = '#000';
				btn.style.color = '#ffffff';
				currentFilter = btn.dataset.filter;
				renderReports();
			});
		});

		// Load reports
		async function loadReports() {
			try {
				const q = query(collection(db, 'reports'), orderBy('timestamp', 'desc'));
				const snapshot = await getDocs(q);
				
				allReports = snapshot.docs.map(doc => ({
					id: doc.id,
					...doc.data()
				}));

				updateStats();
				renderReports();
			} catch (error) {
				console.error('Error loading reports:', error);
				document.getElementById('reportsContainer').innerHTML = `
					<div style="text-align: center; padding: 60px 20px; color: #666; font-size: 16px; font-weight: 600;">❌ Error loading reports</div>
				`;
			}
		}

		// Update stats
		function updateStats() {
			const pending = allReports.filter(r => r.status === 'pending').length;
			const reviewed = allReports.filter(r => r.status === 'reviewed').length;
			
			document.getElementById('pendingCount').textContent = pending;
			document.getElementById('reviewedCount').textContent = reviewed;
			document.getElementById('totalCount').textContent = allReports.length;
			document.getElementById('pendingBadge').textContent = pending;
		}

		// Render reports
		function renderReports() {
			const container = document.getElementById('reportsContainer');
			
			let filteredReports = allReports;
			if (currentFilter !== 'all') {
				filteredReports = allReports.filter(r => r.status === currentFilter);
			}

			if (filteredReports.length === 0) {
				container.innerHTML = `
					<div style="text-align: center; padding: 60px 20px; color: #666; font-size: 16px; font-weight: 600;">
						${currentFilter === 'pending' ? '✅ No pending reports' : '📭 No reports found'}
					</div>
				`;
				return;
			}

			container.innerHTML = filteredReports.map(report => `
				<div style="border: 3px solid ${report.status === 'pending' ? '#ff0000' : '#000'}; padding: 25px; margin-bottom: 20px; background: ${report.status === 'pending' ? '#ffe0e0' : '#ffffff'}; transition: all 0.2s;">
					<div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px; flex-wrap: wrap; gap: 15px;">
						<div>
							<h3 style="font-size: 20px; font-weight: 900; color: #000; margin-bottom: 8px; text-transform: uppercase; letter-spacing: 0.5px;">${report.djName} - ${report.mixTitle}</h3>
							<p style="color: #666; font-size: 14px; font-weight: 600; margin-bottom: 4px;">
								<strong style="color: #000;">Reported by:</strong> ${report.reportedBy}
							</p>
							<p style="color: #666; font-size: 14px; font-weight: 600; margin-bottom: 4px;">
								<strong style="color: #000;">Date:</strong> ${report.timestamp?.toDate?.()?.toLocaleString() || 'Recent'}
							</p>
						</div>
						<div style="display: flex; gap: 10px; flex-wrap: wrap;">
							${report.status === 'pending' ? `
								<button 
									class="mark-reviewed-btn" 
									data-id="${report.id}"
									style="padding: 8px 16px; border: 3px solid #000; font-weight: 700; cursor: pointer; font-size: 12px; text-transform: uppercase; letter-spacing: 0.5px; background: #00cc00; color: #ffffff;"
								>
									✓ Mark Reviewed
								</button>
							` : ''}
							<button 
								class="delete-btn" 
								data-id="${report.id}"
								style="padding: 8px 16px; border: 3px solid #000; font-weight: 700; cursor: pointer; font-size: 12px; text-transform: uppercase; letter-spacing: 0.5px; background: #ff0000; color: #ffffff;"
							>
								Delete
							</button>
							<a 
								href="/dj-mixes?mix=${report.mixId}" 
								target="_blank" 
								style="padding: 8px 16px; border: 3px solid #000; font-weight: 700; cursor: pointer; font-size: 12px; text-transform: uppercase; letter-spacing: 0.5px; text-decoration: none; display: inline-block; background: #000; color: #ffffff;"
							>
								View Mix
							</a>
						</div>
					</div>
					
					<div style="background: #f9f9f9; border: 3px solid #000; padding: 20px; margin-top: 15px;">
						<div style="font-size: 12px; font-weight: 900; color: #666; text-transform: uppercase; letter-spacing: 1px; margin-bottom: 10px;">Reason for Report:</div>
						<div style="color: #000; font-size: 14px; line-height: 1.6; font-weight: 600;">${report.reason}</div>
					</div>

					${report.status === 'reviewed' && report.reviewedAt ? `
						<div style="background: #f9f9f9; padding: 10px 15px; margin-top: 15px; border: 2px solid #000; color: #666; font-size: 12px; font-weight: 700;">
							✓ Reviewed on ${new Date(report.reviewedAt).toLocaleString()}
						</div>
					` : ''}
				</div>
			`).join('');

			// Add event listeners
			document.querySelectorAll('.mark-reviewed-btn').forEach(btn => {
				btn.addEventListener('click', () => markAsReviewed(btn.dataset.id));
			});
			document.querySelectorAll('.delete-btn').forEach(btn => {
				btn.addEventListener('click', () => deleteReport(btn.dataset.id));
			});
		}

		// Mark as reviewed
		async function markAsReviewed(reportId) {
			if (!confirm('Mark this report as reviewed?')) return;
			
			try {
				await updateDoc(doc(db, 'reports', reportId), {
					status: 'reviewed',
					reviewedAt: new Date().toISOString()
				});
				await loadReports();
			} catch (error) {
				console.error('Error updating report:', error);
				alert('Failed to update report');
			}
		}

		// Delete report
		async function deleteReport(reportId) {
			if (!confirm('Delete this report permanently?')) return;
			
			try {
				await deleteDoc(doc(db, 'reports', reportId));
				await loadReports();
			} catch (error) {
				console.error('Error deleting report:', error);
				alert('Failed to delete report');
			}
		}
	</script>
</Layout>