---
export const prerender = false;

// No server-side logic - pure client-side authentication
const response = Astro.response;
response.headers.set('Cache-Control', 'no-store');
---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login - Fresh Wax</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #000;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }
        .container {
            background: #fff;
            border-radius: 12px;
            padding: 40px;
            max-width: 450px;
            width: 100%;
            box-shadow: 0 4px 20px rgba(0,0,0,0.3);
        }
        .logo {
            text-align: center;
            margin-bottom: 30px;
        }
        .logo img {
            height: 60px;
            margin-bottom: 10px;
        }
        .logo p {
            color: #666;
            font-size: 14px;
            font-weight: 500;
        }
        h1 { 
            text-align: center; 
            margin-bottom: 30px;
            font-size: 24px;
        }
        .form-group { margin-bottom: 20px; }
        label { 
            display: block; 
            margin-bottom: 8px; 
            font-weight: 600;
            color: #000;
            font-size: 14px;
        }
        input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
        }
        input:focus { 
            outline: none; 
            border-color: #000;
            box-shadow: 0 0 0 3px rgba(0,0,0,0.1);
        }
        button {
            width: 100%;
            padding: 15px;
            background: #000;
            color: #fff;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            margin-top: 10px;
            transition: all 0.2s ease;
        }
        button:hover:not(:disabled) { 
            background: #333;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        }
        button:disabled { 
            opacity: 0.6; 
            cursor: not-allowed; 
        }
        .message {
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: none;
            text-align: center;
            font-weight: 500;
        }
        .success { 
            background: #f0fdf4; 
            color: #166534; 
            border: 1px solid #bbf7d0; 
        }
        .error { 
            background: #fef2f2; 
            color: #991b1b; 
            border: 1px solid #fecaca; 
        }
        .back { 
            text-align: center; 
            margin-top: 20px; 
        }
        .back a { 
            color: #666; 
            text-decoration: none;
            font-size: 14px;
        }
        .back a:hover {
            color: #000;
            text-decoration: underline;
        }
        @media (max-width: 640px) {
            .container { padding: 30px 20px; }
            .logo img { height: 50px; }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">
            <img src="/logo.webp" alt="Fresh Wax" onerror="this.style.display='none'" />
            <p>Admin Login</p>
        </div>
        
        <div class="message success" id="success">
            Login successful! Redirecting...
        </div>
        <div class="message error" id="error"></div>
        
        <form id="form">
            <div class="form-group">
                <label for="email">Email Address</label>
                <input type="email" id="email" name="email" required autofocus autocomplete="email">
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required autocomplete="current-password">
            </div>
            <button type="submit" id="btn">Sign In</button>
        </form>
        
        <div class="back">
            <a href="/">‚Üê Back to Store</a>
        </div>
    </div>

    <script type="module">
        // Import Firebase modules from CDN
        import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js';
        import { getAuth, signInWithEmailAndPassword } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js';
        import { getFirestore, doc, getDoc } from 'https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js';

        // Initialize Firebase
        const firebaseConfig = {
            apiKey: "AIzaSyBiZGsWdvA9ESm3OsUpZ-VQpwqMjMpBY6g",
            authDomain: "freshwax-store.firebaseapp.com",
            projectId: "freshwax-store",
            storageBucket: "freshwax-store.firebasestorage.app",
            messagingSenderId: "675435782973",
            appId: "1:675435782973:web:e8459c2ec4a5f6d683db54"
        };

        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);
        const db = getFirestore(app);

        // Get form elements
        const form = document.getElementById('form');
        const btn = document.getElementById('btn');
        const success = document.getElementById('success');
        const error = document.getElementById('error');

        // Handle form submission
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            // Hide messages
            success.style.display = 'none';
            error.style.display = 'none';
            
            // Get form values
            const email = document.getElementById('email').value.trim();
            const password = document.getElementById('password').value;
            
            // Disable button
            btn.disabled = true;
            btn.textContent = 'Signing In...';
            
            try {
                // Sign in with Firebase
                const userCredential = await signInWithEmailAndPassword(auth, email, password);
                const user = userCredential.user;
                
                console.log('Signed in user:', user.uid);
                
                // Check if user is admin
                const adminDoc = await getDoc(doc(db, 'admins', user.uid));
                
                console.log('Admin check:', adminDoc.exists());
                
                if (!adminDoc.exists()) {
                    // Not an admin - sign out
                    await auth.signOut();
                    error.textContent = 'Access denied. Admin account required.';
                    error.style.display = 'block';
                    btn.disabled = false;
                    btn.textContent = 'Sign In';
                    return;
                }
                
                // Success!
                success.style.display = 'block';
                form.style.display = 'none';
                
                // Redirect to admin dashboard
                setTimeout(() => {
                    window.location.href = '/admin';
                }, 1500);
                
            } catch (err) {
                console.error('Login error:', err);
                
                let msg = 'Login failed. Please try again.';
                
                if (err.code === 'auth/invalid-credential' || 
                    err.code === 'auth/user-not-found' || 
                    err.code === 'auth/wrong-password') {
                    msg = 'Invalid email or password.';
                } else if (err.code === 'auth/invalid-email') {
                    msg = 'Invalid email address.';
                } else if (err.code === 'auth/too-many-requests') {
                    msg = 'Too many failed attempts. Please try again later.';
                }
                
                error.textContent = msg;
                error.style.display = 'block';
                btn.disabled = false;
                btn.textContent = 'Sign In';
            }
        });
    </script>
</body>
</html>